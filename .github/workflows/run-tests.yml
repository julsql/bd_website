name: Run Django Tests

# Déclenche le workflow sur un push ou une pull request vers la branche principale
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Définir les jobs
jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres_test:
        image: postgres:15
        ports:
          - 5452:5432
        env:
          POSTGRES_USER: postgres_test
          POSTGRES_PASSWORD: postgres_test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: false
      POST_TOKEN: ${{ secrets.POST_TOKEN }}
      GSHEET_CREDENTIALS: config/bd-sheet-91.json
      DJANGO_ENV: test
      POSTGRES_USER: postgres_test
      POSTGRES_PASSWORD: postgres_test
      POSTGRES_DB: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create bd-sheet-91.json from secret
        run: echo '${{ secrets.BD_SHEET_CONFIG }}' > bd/config/bd-sheet-91.json

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5452; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run init.sql manually
        run: |
          PGPASSWORD=$POSTGRES_PASSWORD psql -h localhost -p 5452 -U $POSTGRES_USER -d $POSTGRES_DB -f bd/database/init.sql

      - name: Run tests
        run: |
          cd bd
          python manage.py migrate
          python manage.py test
